/***********************************************************************/
/** Assignment 5.1
/* "Write a method intersect that accepts two unsorted array lists of
/*  integers as parameters and returns a new list that contains only 
/*  the elements that are found in both lists."
/*  The program has two sets of input, the example given for the 
/*  assignent and two arraylists that contain random numbers that are
    generated by randomGen(). I varied the list lengths to get various 
/*  samples of digits.
/***********************************************************************/
import java.util.*;

public class TestArrayLists {                        //don't forget the class word!!!
    /** main method  */
    public static void main(String[] args)  {

        ArrayList<Integer> numberList1 = new ArrayList<Integer>();
        ArrayList<Integer> numberList2 = new ArrayList<Integer>();
//  [1, 4, 8, 9, 11, 15, 17, 28, 41, 59]
        
        numberList1.add(1);
        numberList1.add(4);
        numberList1.add(8);
        numberList1.add(9);    
        numberList1.add(11);
        numberList1.add(15);
        numberList1.add(17);    
        numberList1.add(28);
        numberList1.add(41);
        numberList1.add(59);

// [4, 7, 11, 17, 19, 20, 23, 28, 37, 59, 81]
        numberList2.add(4);
        numberList2.add(7);
        numberList2.add(11);
        numberList2.add(17);
        numberList2.add(19);
        numberList2.add(20);
        numberList2.add(23);
        numberList2.add(28);
        numberList2.add(37);
        numberList2.add(59);
        numberList2.add(81);           

/*        Random randomGen = new Random();
        for (int i = 0; i < 7; i++)    {
            int randomInt = randomGen.nextInt(15);
            numberList1.add(randomInt);
          } // end of for loop             
        for (int i = 0; i < 11  ; i++) {
            int randomInt = randomGen.nextInt(15);
            numberList2.add(randomInt);
        } //end of for loop         */
        System.out.println("ArraylistA is " + numberList1);
        System.out.println("ArraylistB is " + numberList2);
        System.out.println("ArraylistC after checking for duplicates is "
                          + intersect(numberList1,numberList2));
    } //end of main

/***********************************************************************/
/**method intersect takes 2 arrayLsts of integers, listA and listB, as
/* parameters and returns a third listC containing the intersection of
/* those two lists. 
/* 
/***********************************************************************/

    public static ArrayList<Integer> intersect(ArrayList<Integer> listA, ArrayList<Integer> listB)  {
        ArrayList<Integer> listC = new ArrayList<Integer>();
        for (int i = 0; i < listA.size(); i++)  {
            for (int j = 0; j <  listB.size(); j++) {
                if (listA.get(i).equals(listB.get(j)))  
                    listC.add(listA.get(i));
            } //end of for loop
        } //end of for loop
        System.out.println("ArrayListC before duplicate " + listC);
        for (int i = 0; i < (listC.size() - 1); i++)  { //checks for duplicate entries in the same ArrayList 
            for( int j = 0; j < (listC.size()); j++) {
                if (i == j)
                    continue;
                else
                if (listC.get(j).equals(listC.get(i))) {      
                    listC.remove(j);
                } // end of if
            } //end of for loop
        } // end of for loop
        return listC;
    } //end of method intersect

} //end of FunWithLists


