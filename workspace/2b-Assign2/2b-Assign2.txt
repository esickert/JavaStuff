
Working on Assignment
Assignment #2 - "Employees"
  Instructions
Assignment #2 - "Employees"     (worth 5 points)
(worth 5 points)

Objectives:        Create a program that adheres to the Model/View/Controller architecture.

                          Use one of Java’s Collections to store a list of objects

Material from:    class Employee found attached to this assignment

                         Chapter 10 from Wu textbook

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Part I:

You are given Employee.java attached to this assignment. Now you are to write a class EmployeeTest that contains only a main(). This main() creates two objects of class Employee and calls all the methods on those two objects to make sure everything works. Now add a private static counter variable to class Employee that is incremented every time a new Employee object is constructed. Add code to the main() to test this functionality thoroughly to make sure that it is counting correctly.

Part II:

Next write a class called “EmployeeConsoleView”. The class EmployeeConsoleView contains methods that handle the reading and writing of Employee objects. class EmployeeConsoleView includes a method that prompts for and reads data from the user at the console into its Employee parameter, and a method that writes the data from its Employee parameter to the console.

Part III:

Choose one of the Collections from the Java API to use to store a list of Employee objects. Add to your main() the code necessary to prove that you can add to the list of Employees and print the whole list.

The main() that you submit for this assignment must prove that all functionality works correctly. If your main() goes beyond the 30 line maximum (see program guidelines), then you need to create other static methods in class EmployeeTest for the main() to call to help.

In order to receive full credit for this assignment:

- class Employee cannot contain input nor output statements.

- class Employee cannot contain a reference to class EmployeeConsoleView.

- your whole program must follow all program guidelines.

- your main() must show that all the methods work. Note that it is not enough for a method to be called and your program not crash; your main() must show that the method works.

After thoroughly testing your solution, please copy and paste the console to the bottom of your class EmployeeTest. Place comment markers around it so class EmployeeTest continues to compile. Then upload all source files, including the class EmployeeTest with your run pasted to the bottom of it, to Etudes for submission.

    application/javaEmployee.java

Find and select the file from your computer and then click on "Upload" to upload it.

  Instructions
